# 시각화 / 정규식 / => 데이터 읽어서 시각화
"""
  데이터 수집: 공공데이터, 크롤링, 데이터베이스
      |
   데이터 분석: numpy, pandas
      |
     시각화 : matplotlib, seaborn
    ----------------------------- 데이터 전처리
    머신러닝 / 딥러닝 = 라이브러리 (알고리즘)
    아파치 로그 파일 분석
    -------------------

    연산자 사용법
  between ~ and
    = 데이터프레임['컬럼'].between(값1,값2)
  in
    = 데이터프레임['컬럼'].isin(값1,값2...)
  is null
    = 데이터프레임['컬럼'].isnull()
  like
    = 데이터프레임['컬럼'].apply(lambda x:x[0])

  lambda x:express
           ======= 처리
         == 매개변수
  def 함수(매개변수):
    처리 => return

  자바에서
  new Runnable(()->{
    쓰레드 처리
  })

  자바스크립트
  function aaa(){
  }

  let aaa=()=>{
  }

  1. 람다의 단점 : 재사용이 어렵다, 가독성이 떨어진다
    => 코드는 줄어준다

"""